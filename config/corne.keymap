/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Autoshift Macro
#define AS(keycode) &as LS(keycode) keycode

// Windows Clipboard shortcuts
#define REDO  &kp LC(Y)
#define PASTE &kp LC(V)
#define COPY  &kp LC(C)
#define CUT   &kp LC(X)
#define UNDO  &kp LC(Z)

// Layer definition
#define BASE   0
#define NAV    1
#define NUM    2
#define SYM    3
#define BLU    4
//#define U_MOUSE  5
//#define U_MEDIA  6
//#define U_NUM    7
//#define U_SYM    8
//#define U_FUN    9

/ {
     behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lt: ltap {
          compatible = "zmk,behavior-hold-tap";
          label = "ltap";
          #binding-cells = <2>;
          tapping_term_ms = <135>;
          flavor = "tap-preferred";
          bindings = <&mo>, <&kp>;
        };
        ew: esc_cword {
          compatible = "zmk,behavior-hold-tap";
          label = "esc_cword";
          #binding-cells = <2>;
          tapping_term_ms = <135>;
          flavor = "tap-preferred";
          bindings = <&caps_word>, <&kp>;
        };
     };

     keymap {
                compatible = "zmk,keymap";

                base_layer{

                        bindings = <

&none AS(Q)             AS(W)             AS(F)             AS(P)             AS(B)       /**/  AS(J)             AS(L)             AS(U)             AS(Y)             AS(SQT)        &none
&none AS(A)             AS(R)             AS(S)             AS(T)             AS(G)       /**/  AS(M)             AS(N)             AS(E)             AS(I)             AS(O)          &none
&none AS(X)             AS(C)             AS(D)             AS(V)             AS(Z)       /**/  AS(K)             AS(H)             &mt COMMA BSLH    &mt DOT FSLH      &mt QMARK EXCL &none
                                          &ew 0 ESC         &lt NAV SPACE     &lt SYM TAB /**/  &lt NUM RET       &kp BSPC          &tog NAV

                        >;
                };

                nav_layer{

                        bindings = <

&none &trans            &trans           &trans             &trans            &kp DEL     /**/  CUT               &kp PG_UP         &kp UP            &kp PG_DN         &trans         &none
&none &trans            &trans           &trans             &trans            PASTE       /**/  COPY              &kp LEFT          &kp DOWN          &kp RIGHT         &trans         &none
&none &trans            &trans           &trans             &trans            REDO        /**/  UNDO              &kp HOME          &trans            &kp END           &trans         &none
                                         &trans             &trans            &trans      /**/  &mo BLU           &trans            &tog NAV

                        >;
                };

                num_layer {

                        bindings = <

&none &mt CARET TILDE   &kp N7           &kp N8             &kp N9            &kp N0      /**/  &mt PLUS ASTRK    &mt MINUS UNDER   &mt LBRC RBRC     &trans            &trans         &none
&none &mt PIPE PRCNT    &kp N4           &kp N5             &kp N6            &kp DOT     /**/  &mt FSLH BSLH     &mt EQUAL EXCL    &mt LPAR RPAR     &trans            &trans         &none
&none &mt AMPS HASH     &kp N1           &kp N2             &kp N3            &kp COMMA   /**/  &mt AMPS PIPE     &mt LT GT         &mt LBKT RBKT     &trans            &trans         &none
                                         &trans             &lt NAV SPACE     &trans      /**/  &trans            &trans            &trans
                        
                        >;
                };

                sym_layer {

                        bindings = <

&none &mt CARET TILDE   &kp N7           &kp N8             &kp N9            &kp N0      /**/  &mt PLUS ASTRK    &mt MINUS UNDER   &mt LBRC RBRC     &trans            &trans         &none
&none &mt PIPE PRCNT    &kp N4           &kp N5             &kp N6            &kp DOT     /**/  &mt FSLH BSLH     &mt EQUAL EXCL    &mt LPAR RPAR     &trans            &trans         &none
&none &mt AMPS HASH     &kp N1           &kp N2             &kp N3            &kp COMMA   /**/  &mt AMPS PIPE     &mt LT GT         &mt LBKT RBKT     &trans            &trans         &none
                                         &trans             &lt NAV SPACE     &trans      /**/  &trans            &kp DEL           &trans
                        
                        >;
                };

                blu_layer {

                        bindings = <
                        
&none &kp F1            &kp F2           &kp F3             &kp F4            &kp F5      /**/  &kp F6            &kp F7            &kp F8            &kp F9            &kp F10        &none
&none &bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3      &bt BT_SEL 4/**/  &trans            &trans            &trans            &kp F11           &kp F12        &none
&none &trans            &trans           &trans             &trans            &trans      /**/  &trans            &trans            &trans            &trans            &trans         &none
                                         &bt BT_CLR         &trans            &bt BT_NXT  /**/  &bt BT_PRV        &trans            &trans
                        >;
                };

        };
};
